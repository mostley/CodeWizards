//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeWizards.TestClient.CodeWizardsServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorldUpdate", Namespace="http://schemas.datacontract.org/2004/07/CodeWizards.Contracts")]
    [System.SerializableAttribute()]
    public partial class WorldUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CodeWizards.TestClient.CodeWizardsServer.SpellInstance[] ActiveSpellsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CodeWizards.TestClient.CodeWizardsServer.Entity[] LastDelvedEntitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CodeWizards.TestClient.CodeWizardsServer.SpellInstance[] ActiveSpells {
            get {
                return this.ActiveSpellsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveSpellsField, value) != true)) {
                    this.ActiveSpellsField = value;
                    this.RaisePropertyChanged("ActiveSpells");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CodeWizards.TestClient.CodeWizardsServer.Entity[] LastDelvedEntities {
            get {
                return this.LastDelvedEntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.LastDelvedEntitiesField, value) != true)) {
                    this.LastDelvedEntitiesField = value;
                    this.RaisePropertyChanged("LastDelvedEntities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpellInstance", Namespace="http://schemas.datacontract.org/2004/07/CodeWizards.Contracts")]
    [System.SerializableAttribute()]
    public partial class SpellInstance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CodeWizards.TestClient.CodeWizardsServer.Entity TargetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CodeWizards.TestClient.CodeWizardsServer.Entity Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/CodeWizards.Contracts")]
    [System.SerializableAttribute()]
    public partial class Entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CodeWizards.TestClient.CodeWizardsServer.Vector PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CodeWizards.TestClient.CodeWizardsServer.Vector Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vector", Namespace="http://schemas.datacontract.org/2004/07/CodeWizards.Contracts")]
    [System.SerializableAttribute()]
    public partial class Vector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeWizardsServer.ICodeWizardsServer")]
    public interface ICodeWizardsServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWizardsServer/WriteScroll", ReplyAction="http://tempuri.org/ICodeWizardsServer/WriteScrollResponse")]
        void WriteScroll(string token, string name, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWizardsServer/Join", ReplyAction="http://tempuri.org/ICodeWizardsServer/JoinResponse")]
        string Join(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWizardsServer/Leave", ReplyAction="http://tempuri.org/ICodeWizardsServer/LeaveResponse")]
        void Leave(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWizardsServer/GetUpdate", ReplyAction="http://tempuri.org/ICodeWizardsServer/GetUpdateResponse")]
        CodeWizards.TestClient.CodeWizardsServer.WorldUpdate GetUpdate(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICodeWizardsServerChannel : CodeWizards.TestClient.CodeWizardsServer.ICodeWizardsServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeWizardsServerClient : System.ServiceModel.ClientBase<CodeWizards.TestClient.CodeWizardsServer.ICodeWizardsServer>, CodeWizards.TestClient.CodeWizardsServer.ICodeWizardsServer {
        
        public CodeWizardsServerClient() {
        }
        
        public CodeWizardsServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeWizardsServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeWizardsServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeWizardsServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void WriteScroll(string token, string name, string code) {
            base.Channel.WriteScroll(token, name, code);
        }
        
        public string Join(string username) {
            return base.Channel.Join(username);
        }
        
        public void Leave(string token) {
            base.Channel.Leave(token);
        }
        
        public CodeWizards.TestClient.CodeWizardsServer.WorldUpdate GetUpdate(string token) {
            return base.Channel.GetUpdate(token);
        }
    }
}
